/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.pkg1.linked.list.project;
import javax.swing.*;
import javax.swing.table.*;


/**
 *
 * @author Programador
 */
public class FrmConsProducto extends javax.swing.JFrame {

    /**
     * Creates new form FrmConsProducto
     */
    public FrmConsProducto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtbuscar = new javax.swing.JTextField();
        cmbopcion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Consulta de Producto");

        jButton2.setText("Consultar");
        jButton2.setName("btnsalvar"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Referencia", "Descripcion", "Cantidad", "Precio"
            }
        ));
        jScrollPane1.setViewportView(table);

        cmbopcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descripcion", "Referencia" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Buscar Por : ");

        jButton4.setText("Borrar");
        jButton4.setName("btnsalvar"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(287, 287, 287))
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 74, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbopcion, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbopcion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public static void empty_first_rows(DefaultTableModel model )
    {
       int filas = model.getRowCount();
       for(int i = 0; i < filas; i++)
       {
           model.removeRow(0);
       }
    }
    
    public static void fillTable(DefaultTableModel model)
    {
        Nodo node = new Nodo();
       node = Data.list.getCabeza();
       Producto aux_product = new Producto();
       // empty first rows
       FrmConsProducto.empty_first_rows(model);
       //JOptionPane.showMessageDialog(null, node.value.descripcion);
       while(true)
       {
           if(node != null)
           {
               aux_product = node.value;
               Object[] row = { aux_product.referencia, aux_product.descripcion, aux_product.cantidad, aux_product.precio };
               model.addRow(row);
               //JOptionPane.showMessageDialog(null, node.value.descripcion);
               node = node.link;
           }
           else
           {
               break;
           }
       }
    }
    
    public static void deleteAllRows(final DefaultTableModel model) 
    {
        for( int i = model.getRowCount() - 1; i >= 0; i-- ) {
            model.removeRow(i);
        }
    }
    
    public static void fillTableByReferencia(String subs, DefaultTableModel model)
    {
       deleteAllRows(model);
       Nodo node = new Nodo();
       node = Data.list.getCabeza();
       Producto aux_product = new Producto();
       // empty first rows
       FrmConsProducto.empty_first_rows(model);
       //JOptionPane.showMessageDialog(null, node.value.descripcion);
       while(true)
       {
           if(node != null)
           {
               aux_product = node.value;
               // LLENAR SI CUMPLE EL PATRON
               if(utils.isSubstring(subs, aux_product.referencia))
               {
                   Object[] row = { aux_product.referencia, aux_product.descripcion, aux_product.cantidad, aux_product.precio };
                   model.addRow(row);
                   //JOptionPane.showMessageDialog(null, node.value.descripcion);
               } 
               node = node.link;
           }
           else
           {
               break;
           }
       }
    }
    
    public static void fillTableByDescripcion(String subs, DefaultTableModel model)
    {
       deleteAllRows(model);
       Nodo node = new Nodo();
       node = Data.list.getCabeza();
       Producto aux_product = new Producto();
       // empty first rows
       FrmConsProducto.empty_first_rows(model);
       //JOptionPane.showMessageDialog(null, node.value.descripcion);
       while(true)
       {
           if(node != null)
           {
               aux_product = node.value;
               // LLENAR SI CUMPLE EL PATRON
               if(utils.isSubstring(subs, aux_product.descripcion))
               {
                   Object[] row = { aux_product.referencia, aux_product.descripcion, aux_product.cantidad, aux_product.precio };
                   model.addRow(row);
                   //JOptionPane.showMessageDialog(null, node.value.descripcion);
               } 
               node = node.link;
           }
           else
           {
               break;
           }
       }
    }
    
    public static void DeleteProductsByReferencia(String subs, DefaultTableModel model)
    {
       //eliminarNodoByReferencia
       //deleteAllRows(model);
       Nodo node = new Nodo();
       node = Data.list.getCabeza();
       Producto aux_product = new Producto();
       // empty first rows
       //FrmConsProducto.empty_first_rows(model);
       //JOptionPane.showMessageDialog(null, node.value.descripcion);
       while(true)
       {
           if(node != null)
           {
               aux_product = node.value;
               // LLENAR SI CUMPLE EL PATRON
               if(utils.isSubstring(subs, aux_product.referencia))
               {
                   Data.list.eliminarNodoByReferencia(aux_product.referencia);
                   //Object[] row = { aux_product.referencia, aux_product.descripcion, aux_product.cantidad, aux_product.precio };
                   //model.addRow(row);
                   //JOptionPane.showMessageDialog(null, node.value.descripcion);
               } 
               node = node.link;
           }
           else
           {
               break;
           }
       }
       fillTable(model);
    }
    
    public static void DeleteProductsByDescripcion(String subs, DefaultTableModel model)
    {
       //eliminarNodoByReferencia
       //deleteAllRows(model);
       Nodo node = new Nodo();
       node = Data.list.getCabeza();
       Producto aux_product = new Producto();
       // empty first rows
       //FrmConsProducto.empty_first_rows(model);
       //JOptionPane.showMessageDialog(null, node.value.descripcion);
       while(true)
       {
           if(node != null)
           {
               aux_product = node.value;
               // LLENAR SI CUMPLE EL PATRON
               if(utils.isSubstring(subs, aux_product.descripcion))
               {
                   Data.list.eliminarNodoByDescripcion(aux_product.descripcion);
                   //Object[] row = { aux_product.referencia, aux_product.descripcion, aux_product.cantidad, aux_product.precio };
                   //model.addRow(row);
                   //JOptionPane.showMessageDialog(null, node.value.descripcion);
               } 
               node = node.link;
           }
           else
           {
               break;
           }
       }
       fillTable(model);
    }
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String opcion = cmbopcion.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        if(opcion == "Descripcion")
        {
            fillTableByDescripcion(this.txtbuscar.getText(), model);
        }
        if(opcion == "Referencia")
        {
            fillTableByReferencia(this.txtbuscar.getText(), model);
        }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "Hola Mundo");
       // ctrl + alt + pgdown / page up
       
           //dgvdata.add(new object[]{ Data.list.
       DefaultTableModel model = (DefaultTableModel) table.getModel();
       fillTable(model);
    }//GEN-LAST:event_formWindowActivated

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       String opcion = cmbopcion.getSelectedItem().toString();
       DefaultTableModel model = (DefaultTableModel) table.getModel();
       String sub = txtbuscar.getText();
       if(opcion == "Referencia")
       {
           DeleteProductsByReferencia(sub, model);
       }
       else
       {
           DeleteProductsByDescripcion(sub, model);
       }
       
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConsProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConsProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConsProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConsProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConsProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbopcion;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
}
